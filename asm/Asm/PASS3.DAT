    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Port definitions
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LED_port
   OPERAND2-80
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LED_accumulator_port
   OPERAND2-90
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_IN_PORT
   OPERAND2-00
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Special Register Usage
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;None
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Scratchpad memory locations
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Preserve registers s0-s3, led pattern
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_sB
   OPERAND2-00
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_sC
   OPERAND2-01
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_sD
   OPERAND2-02
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_sE
   OPERAND2-03
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-COUNTER_256
   OPERAND2-05
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-SUM0
   OPERAND2-06
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-SUM1
   OPERAND2-07
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Constants
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Clock constants
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-delay_1us_constant
   OPERAND2-0B
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Initialize System
    ADDRESS-000
      LABEL-cold_start
INSTRUCTION-LOAD
   OPERAND1-sA
   OPERAND2-01
    COMMENT-
    ADDRESS-001
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sB
   OPERAND2-FF
    COMMENT-
    ADDRESS-002
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sC
   OPERAND2-00
    COMMENT-
    ADDRESS-003
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sB
   OPERAND2-COUNTER_256
    COMMENT-;initialize to FF, so overflows and outputs 0 right away
    ADDRESS-004
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sC
   OPERAND2-SUM0
    COMMENT-;initialize to 0
    ADDRESS-005
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sC
   OPERAND2-SUM1
    COMMENT-
    ADDRESS-006
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sA
   OPERAND2-LED_port
    COMMENT-;turn on LED
    ADDRESS-007
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sB
   OPERAND2-LED_accumulator_port
    COMMENT-;set accumulator display to 00
    ADDRESS-008
      LABEL-
INSTRUCTION-ENABLE
   OPERAND1-INTERRUPT
   OPERAND2-
    COMMENT-
    ADDRESS-009
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Main Program
    ADDRESS-009
      LABEL-main_program
INSTRUCTION-CALL
   OPERAND1-delay_1s
   OPERAND2-
    COMMENT-
    ADDRESS-00A
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-sA
   OPERAND2-01
    COMMENT-
    ADDRESS-00B
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-add
    COMMENT-
    ADDRESS-00C
      LABEL-subtract
INSTRUCTION-SUB
   OPERAND1-sA
   OPERAND2-01
    COMMENT-;sA == 01
    ADDRESS-00D
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-set_led
   OPERAND2-
    COMMENT-
    ADDRESS-00E
      LABEL-add
INSTRUCTION-ADD
   OPERAND1-sA
   OPERAND2-01
    COMMENT-;sA != 01
    ADDRESS-00F
      LABEL-set_led
INSTRUCTION-OUTPUT
   OPERAND1-sA
   OPERAND2-LED_port
    COMMENT-
    ADDRESS-010
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-main_program
   OPERAND2-
    COMMENT-
    ADDRESS-011
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Routines for software delays, borrowed from in-class activity
    ADDRESS-011
      LABEL-delay_1us
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-delay_1us_constant
    COMMENT-
    ADDRESS-012
      LABEL-wait_1us
INSTRUCTION-SUB
   OPERAND1-s0
   OPERAND2-01
    COMMENT-
    ADDRESS-013
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_1us
    COMMENT-
    ADDRESS-014
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-015
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-015
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 40us.
    ADDRESS-015
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-015
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1
    ADDRESS-015
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-015
      LABEL-delay_40us
INSTRUCTION-LOAD
   OPERAND1-s1
   OPERAND2-28
    COMMENT-;40 x 1us = 40us
    ADDRESS-016
      LABEL-wait_40us
INSTRUCTION-CALL
   OPERAND1-delay_1us
   OPERAND2-
    COMMENT-
    ADDRESS-017
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s1
   OPERAND2-01
    COMMENT-
    ADDRESS-018
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_40us
    COMMENT-
    ADDRESS-019
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 1ms.
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1, s2
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-01A
      LABEL-delay_1ms
INSTRUCTION-LOAD
   OPERAND1-s2
   OPERAND2-19
    COMMENT-;25 x 40us = 1ms
    ADDRESS-01B
      LABEL-wait_1ms
INSTRUCTION-CALL
   OPERAND1-delay_40us
   OPERAND2-
    COMMENT-
    ADDRESS-01C
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s2
   OPERAND2-01
    COMMENT-
    ADDRESS-01D
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_1ms
    COMMENT-
    ADDRESS-01E
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-01F
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-01F
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 20ms.
    ADDRESS-01F
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-01F
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 20ms used during initialisation.
    ADDRESS-01F
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-01F
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1, s2, s3
    ADDRESS-01F
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-01F
      LABEL-delay_20ms
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-14
    COMMENT-;20 x 1ms = 20ms
    ADDRESS-020
      LABEL-wait_20ms
INSTRUCTION-CALL
   OPERAND1-delay_1ms
   OPERAND2-
    COMMENT-
    ADDRESS-021
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s3
   OPERAND2-01
    COMMENT-
    ADDRESS-022
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_20ms
    COMMENT-
    ADDRESS-023
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-024
      LABEL-delay_100ms
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-64
    COMMENT-;100 x 1ms = 20ms
    ADDRESS-025
      LABEL-wait_100ms
INSTRUCTION-CALL
   OPERAND1-delay_1ms
   OPERAND2-
    COMMENT-
    ADDRESS-026
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s3
   OPERAND2-01
    COMMENT-
    ADDRESS-027
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_100ms
    COMMENT-
    ADDRESS-028
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-029
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-029
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of approximately 1 second.
    ADDRESS-029
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-029
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1, s2, s3, s4
    ADDRESS-029
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-029
      LABEL-delay_1s
INSTRUCTION-LOAD
   OPERAND1-s4
   OPERAND2-32
    COMMENT-;50 x 20ms = 1000ms
    ADDRESS-02A
      LABEL-wait_1s
INSTRUCTION-CALL
   OPERAND1-delay_20ms
   OPERAND2-
    COMMENT-
    ADDRESS-02B
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s4
   OPERAND2-01
    COMMENT-
    ADDRESS-02C
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_1s
    COMMENT-
    ADDRESS-02D
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-02E
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;ISR Routine
    ADDRESS-02E
      LABEL-ISR
INSTRUCTION-STORE
   OPERAND1-sB
   OPERAND2-ISR_preserve_sB
    COMMENT-
    ADDRESS-02F
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sC
   OPERAND2-ISR_preserve_sC
    COMMENT-
    ADDRESS-030
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sD
   OPERAND2-ISR_preserve_sD
    COMMENT-
    ADDRESS-031
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sE
   OPERAND2-ISR_preserve_sE
    COMMENT-
    ADDRESS-032
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sB
   OPERAND2-COUNTER_256
    COMMENT-
    ADDRESS-033
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sC
   OPERAND2-SUM0
    COMMENT-
    ADDRESS-034
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sD
   OPERAND2-SUM1
    COMMENT-
    ADDRESS-035
      LABEL-
INSTRUCTION-ADD
   OPERAND1-sB
   OPERAND2-01
    COMMENT-;increment counter
    ADDRESS-036
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NC
   OPERAND2-accumulator_add
    COMMENT-;when overflow, is 256
    ADDRESS-037
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sE
   OPERAND2-FF
    COMMENT-
    ADDRESS-038
      LABEL-shift_left
INSTRUCTION-SL0
   OPERAND1-sD
   OPERAND2-
    COMMENT-;loop until all bits shifted away
    ADDRESS-039
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-C
   OPERAND2-output_sum
    COMMENT-
    ADDRESS-03A
      LABEL-
INSTRUCTION-SL0
   OPERAND1-sE
   OPERAND2-
    COMMENT-
    ADDRESS-03B
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-shift_left
    COMMENT-
    ADDRESS-03C
      LABEL-output_sum
INSTRUCTION-OUTPUT
   OPERAND1-sE
   OPERAND2-LED_accumulator_port
    COMMENT-;if overflow, output and rst accumulator
    ADDRESS-03D
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sC
   OPERAND2-00
    COMMENT-
    ADDRESS-03E
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
   OPERAND2-00
    COMMENT-
    ADDRESS-03F
      LABEL-accumulator_add
INSTRUCTION-INPUT
   OPERAND1-sE
   OPERAND2-DATA_IN_PORT
    COMMENT-
    ADDRESS-040
      LABEL-
INSTRUCTION-ADDCY
   OPERAND1-sC
   OPERAND2-sE
    COMMENT-
    ADDRESS-041
      LABEL-
INSTRUCTION-ADDCY
   OPERAND1-sD
   OPERAND2-00
    COMMENT-
    ADDRESS-042
      LABEL-end_isr
INSTRUCTION-STORE
   OPERAND1-sB
   OPERAND2-COUNTER_256
    COMMENT-
    ADDRESS-043
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sC
   OPERAND2-SUM0
    COMMENT-
    ADDRESS-044
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sD
   OPERAND2-SUM1
    COMMENT-
    ADDRESS-045
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sB
   OPERAND2-ISR_preserve_sB
    COMMENT-;restore registers
    ADDRESS-046
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sC
   OPERAND2-ISR_preserve_sC
    COMMENT-
    ADDRESS-047
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sD
   OPERAND2-ISR_preserve_sD
    COMMENT-
    ADDRESS-048
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sE
   OPERAND2-ISR_preserve_sE
    COMMENT-
    ADDRESS-049
      LABEL-
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
   OPERAND2-
    COMMENT-
    ADDRESS-04A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Interrupt Vector
    ADDRESS-3FF
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-3FF
   OPERAND2-
    COMMENT-
    ADDRESS-3FF
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-ISR
   OPERAND2-
    COMMENT-
