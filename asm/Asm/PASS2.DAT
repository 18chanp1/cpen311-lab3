      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Port definitions
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LED_port
   OPERAND2-80
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LED_accumulator_port
   OPERAND2-40
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_IN_PORT
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Special Register Usage
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;None
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Scratchpad memory locations
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Preserve registers s0-s3, led pattern
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_sB
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_sC
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_sD
   OPERAND2-02
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_sE
   OPERAND2-03
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-COUNTER_256
   OPERAND2-05
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-SUM0
   OPERAND2-06
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-SUM1
   OPERAND2-07
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Constants
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Clock constants
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-delay_1us_constant
   OPERAND2-0B
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Initialize System
      LABEL-cold_start
INSTRUCTION-LOAD
   OPERAND1-sA
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sB
   OPERAND2-FF
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sC
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sB
   OPERAND2-COUNTER_256
    COMMENT-;initialize to FF, so overflows and outputs 0 right away
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sC
   OPERAND2-SUM0
    COMMENT-;initialize to 0
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sC
   OPERAND2-SUM1
    COMMENT-
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sA
   OPERAND2-LED_port
    COMMENT-;turn on LED
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sC
   OPERAND2-LED_accumulator_port
    COMMENT-;set accumulator display to 00
      LABEL-
INSTRUCTION-ENABLE
   OPERAND1-INTERRUPT
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Main Program
      LABEL-main_program
INSTRUCTION-CALL
   OPERAND1-delay_1s
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-sA
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-add
    COMMENT-
      LABEL-subtract
INSTRUCTION-SUB
   OPERAND1-sA
   OPERAND2-01
    COMMENT-;sA == 01
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-set_led
   OPERAND2-
    COMMENT-
      LABEL-add
INSTRUCTION-ADD
   OPERAND1-sA
   OPERAND2-01
    COMMENT-;sA != 01
      LABEL-set_led
INSTRUCTION-OUTPUT
   OPERAND1-sA
   OPERAND2-LED_port
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-main_program
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Routines for software delays, borrowed from in-class activity
      LABEL-delay_1us
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-delay_1us_constant
    COMMENT-
      LABEL-wait_1us
INSTRUCTION-SUB
   OPERAND1-s0
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_1us
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 40us.
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-delay_40us
INSTRUCTION-LOAD
   OPERAND1-s1
   OPERAND2-28
    COMMENT-;40 x 1us = 40us
      LABEL-wait_40us
INSTRUCTION-CALL
   OPERAND1-delay_1us
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s1
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_40us
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 1ms.
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1, s2
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-delay_1ms
INSTRUCTION-LOAD
   OPERAND1-s2
   OPERAND2-19
    COMMENT-;25 x 40us = 1ms
      LABEL-wait_1ms
INSTRUCTION-CALL
   OPERAND1-delay_40us
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s2
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_1ms
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 20ms.
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 20ms used during initialisation.
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1, s2, s3
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-delay_20ms
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-14
    COMMENT-;20 x 1ms = 20ms
      LABEL-wait_20ms
INSTRUCTION-CALL
   OPERAND1-delay_1ms
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s3
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_20ms
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-delay_100ms
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-64
    COMMENT-;100 x 1ms = 20ms
      LABEL-wait_100ms
INSTRUCTION-CALL
   OPERAND1-delay_1ms
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s3
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_100ms
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of approximately 1 second.
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1, s2, s3, s4
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-delay_1s
INSTRUCTION-LOAD
   OPERAND1-s4
   OPERAND2-32
    COMMENT-;50 x 20ms = 1000ms
      LABEL-wait_1s
INSTRUCTION-CALL
   OPERAND1-delay_20ms
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s4
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_1s
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;ISR Routine
      LABEL-ISR
INSTRUCTION-STORE
   OPERAND1-sB
   OPERAND2-ISR_preserve_sB
    COMMENT-
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sC
   OPERAND2-ISR_preserve_sC
    COMMENT-
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sD
   OPERAND2-ISR_preserve_sD
    COMMENT-
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sE
   OPERAND2-ISR_preserve_sE
    COMMENT-
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sB
   OPERAND2-COUNTER_256
    COMMENT-
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sC
   OPERAND2-SUM0
    COMMENT-
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sD
   OPERAND2-SUM1
    COMMENT-
      LABEL-
INSTRUCTION-ADD
   OPERAND1-sB
   OPERAND2-01
    COMMENT-;increment counter
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NC
   OPERAND2-accumulator_add
    COMMENT-;when overflow, is 256
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sE
   OPERAND2-FF
    COMMENT-
      LABEL-shift_left
INSTRUCTION-SL0
   OPERAND1-sD
   OPERAND2-
    COMMENT-;loop until all bits shifted away
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-C
   OPERAND2-output_sum
    COMMENT-
      LABEL-
INSTRUCTION-SL0
   OPERAND1-sE
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-shift_left
    COMMENT-
      LABEL-output_sum
INSTRUCTION-OUTPUT
   OPERAND1-sE
   OPERAND2-LED_accumulator_port
    COMMENT-;if overflow, output and rst accumulator
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sC
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
   OPERAND2-00
    COMMENT-
      LABEL-accumulator_add
INSTRUCTION-INPUT
   OPERAND1-sE
   OPERAND2-DATA_IN_PORT
    COMMENT-
      LABEL-
INSTRUCTION-TEST
   OPERAND1-sE
   OPERAND2-80
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-pos_add
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-sE
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-XOR
   OPERAND1-sE
   OPERAND2-FF
    COMMENT-
      LABEL-pos_add
INSTRUCTION-ADD
   OPERAND1-sC
   OPERAND2-sE
    COMMENT-
      LABEL-
INSTRUCTION-ADDCY
   OPERAND1-sD
   OPERAND2-00
    COMMENT-
      LABEL-end_isr
INSTRUCTION-STORE
   OPERAND1-sB
   OPERAND2-COUNTER_256
    COMMENT-
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sC
   OPERAND2-SUM0
    COMMENT-
      LABEL-
INSTRUCTION-STORE
   OPERAND1-sD
   OPERAND2-SUM1
    COMMENT-
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sB
   OPERAND2-ISR_preserve_sB
    COMMENT-;restore registers
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sC
   OPERAND2-ISR_preserve_sC
    COMMENT-
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sD
   OPERAND2-ISR_preserve_sD
    COMMENT-
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-sE
   OPERAND2-ISR_preserve_sE
    COMMENT-
      LABEL-
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;Interrupt Vector
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-3FF
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-ISR
   OPERAND2-
    COMMENT-
